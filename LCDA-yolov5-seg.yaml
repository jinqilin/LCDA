# Parameters
nc: 20  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple             通道数乘0.5倍数，变为原数值的一半
# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 backbone
backbone:
  # [from, number, module, args]
  [ [ -1, 1, Conv, [ 8, 3, 2 ] ],                 # 0-p1/2
    [ -1, 1, ECDAConv_Block, [ 8,   12, 3, 2, 1 ] ],  # 1-p2/4
    [ -1, 1, ECDAConv_Block, [ 12,  54, 3, 2, 1 ] ],  # 2-p3/8
    [ -1, 1, ECDAConv_Block, [ 12,  66, 3, 1, 1 ] ],  # 3-p3/8
    [ -1, 1, ECDAConv_Block, [ 24,  72, 5, 2, 1 ] ],  # 4-p4/16
    [ -1, 1, ECDAConv_Block, [ 24, 180, 5, 1, 1 ] ],  # 5-p4/16
    [ -1, 1, ECDAConv_Block, [ 24,  90, 5, 1, 1 ] ],  # 6-p4/16
    [ -1, 1, ECDAConv_Block, [ 24, 108, 5, 1, 1 ] ],  # 7-p4/16
    [ -1, 1, ECDAConv_Block, [ 48, 216, 5, 2, 1 ] ],  # 8-p5/32
    [ -1, 1, ECDAConv_Block, [ 48, 432, 5, 1, 1 ] ],  # 9-p5/32
    [ -1, 1, ECDAConv_Block, [ 48, 432, 5, 1, 1 ] ],  # 10-p5/32
  ]

# YOLOv5 head                    0.5乘数，head部分相当于yolov5n-seg，最小
head:
 [[-1, 1, Conv, [128, 1, 1]],                        #使用了1×1的卷积
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 7], 1, Concat, [1]],  # cat backbone P4
   [-1, 1, C3, [128, False]],  # 14

   [-1, 1, Conv, [64, 1, 1]],                        #使用了1×1的卷积
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 3], 1, Concat, [1]],  # cat backbone P3
   [-1, 1, C3, [64, False]],  # 18 (P3/8-small)

   [-1, 1, Conv, [64, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 1, C3, [128, False]],  # 21 (P4/16-medium)

   [-1, 1, Conv, [128, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 1, C3, [256, False]],  # 24 (P5/32-large)

   [[18, 21, 24], 1, Segment, [nc, anchors, 32, 64]],  # Detect(P3, P4, P5)
  ]